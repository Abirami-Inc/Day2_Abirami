<Activity mc:Ignorable="sap sap2010" x:Class="LCM_Of_Two_Numbers" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="LCM_Of_Two_Numbers_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="3 Create a program to find LCM of two numbers" DisplayName="LCM_Of_Two_Numbers" sap:VirtualizedContainerService.HintSize="1012,2156" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="Number1" />
      <Variable x:TypeArguments="x:Int32" Name="Number2" />
      <Variable x:TypeArguments="x:Int32" Name="ProductOfTwoNumebr" />
      <Variable x:TypeArguments="x:Int32" Name="LCM" />
      <Variable x:TypeArguments="x:Int32" Name="GCD" />
      <Variable x:TypeArguments="x:Int32" Name="temp" />
      <Variable x:TypeArguments="x:Int32" Name="Num1" />
      <Variable x:TypeArguments="x:Int32" Name="Num2" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Get userInput for Number_1" sap:VirtualizedContainerService.HintSize="536,271" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Enter First Number : " Title="Number 1 ">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Int32">[Number1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Get userInput for Number_2" sap:VirtualizedContainerService.HintSize="536,271" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Enter Number 2 :" Title="Number 2">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Int32">[Number2]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <Assign DisplayName="Assign Num1=Number_1" sap:VirtualizedContainerService.HintSize="536,114" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Num1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Number1]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Num2=Number_2" sap:VirtualizedContainerService.HintSize="536,114" sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Num2]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Number2]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Store product of TwoNumber" sap:VirtualizedContainerService.HintSize="536,114" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[ProductOfTwoNumebr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Number1*Number2]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence sap2010:Annotation.AnnotationText="GCD of Two Numbers" DisplayName="Sequence to find GCD of Two Number" sap:VirtualizedContainerService.HintSize="536,653" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[Number2 &gt;0]" DisplayName="While Loop to find Gcd until (Number_2&gt;0)" sap:VirtualizedContainerService.HintSize="502,530" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="if condition met true continue to execute the body" sap:VirtualizedContainerService.HintSize="468,393" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign temp=Number_2 to presever Number2 value" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[temp]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Number2]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Number_2=Number1 mod Number_2" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Number2]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Number1 Mod Number2]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Number_1=temp" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Number1]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[temp]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ui:InterruptibleWhile.Body>
      </ui:InterruptibleWhile>
    </Sequence>
    <Assign DisplayName="Assign GCD=Number_1" sap:VirtualizedContainerService.HintSize="536,114" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[GCD]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Number1]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message to print GCD " sap:VirtualizedContainerService.HintSize="536,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[GCD.ToString+&quot; is Gcd of &quot;+Num1.ToString+&quot; and &quot;+Num2.ToString]" />
    <Assign DisplayName="Assign LCM= (productOfTwoNumber/GCD)" sap:VirtualizedContainerService.HintSize="536,114" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[LCM]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[cint(ProductOfTwoNumebr/GCD)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message to print LCM" sap:VirtualizedContainerService.HintSize="536,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;LCM of &quot;+Num1.ToString+&quot; and &quot;+Num2.ToString+&quot; is : &quot;+LCM.ToString]" />
  </Sequence>
</Activity>